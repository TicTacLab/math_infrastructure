- name: Setup Cassandra
  hosts: tag_Cassandra_Yes
  tasks:
    - include: common/tasks/oracle_jdk.yml

    - name: Add cassandra repo
      shell: echo "deb http://debian.datastax.com/community stable main" | tee -a /etc/apt/sources.list.d/cassandra.sources.list
      sudo: yes

    - name: Add key
      apt_key: url=http://debian.datastax.com/debian/repo_key
               state=present
      sudo: yes

    - name: Install Cassandra
      apt: name="{{item}}" state=installed  update_cache=yes
      with_items:
        - dsc20=2.0.11-1
        - cassandra=2.0.11
      sudo: yes

    - name: Copy cassandra.yaml
      template: src=cassandra/templates/cassandra.yaml
                dest=/etc/cassandra/cassandra.yaml
      sudo: yes

    - name: Copy log4j-server.properties
      copy: src=cassandra/files/log4j-server.properties
            dest=/etc/cassandra/log4j-server.properties
            owner=cassandra
            group=cassandra
            mode=755
      sudo: yes

    - name: Copy cassandra env
      template: src=cassandra/templates/cassandra-env.sh
                dest=/etc/cassandra/cassandra-env.sh
                owner=cassandra
                group=cassandra
                mode=755
      sudo: yes

    - name: Create cassandra data dir
      file: path={{cassandra_data_dir}} state=directory owner=cassandra
      sudo: yes

    - name: Move old logs
      command: mv /var/log/cassandra/system.log /var/log/cassandra/system.log.old
      sudo: yes
      ignore_errors: yes

    - name: Run Cassandra
      service: name=cassandra state=restarted enabled=yes
      sudo: yes

    - name: Wait for Cassandra to start
      wait_for: path=/var/log/cassandra/system.log timeout=60 search_regex='.*Listening for thrift clients.*' state=present

- name: Load data
  hosts: tag_Cassandra_Yes[0]
  tasks:
    - name: User exists?
      command: cqlsh -u malt -p {{cassandra_password}} -e "LIST USERS" {{config[ansible_hostname].cassandra_listen_address}}
      register: user_check
      ignore_errors: yes

    - name: Create malt user
      shell: >
        cqlsh -u cassandra -p cassandra -e "CONSISTENCY ALL; CREATE USER malt WITH PASSWORD '{{cassandra_password}}' SUPERUSER"  {{config[ansible_hostname].cassandra_listen_address}} &&
        cqlsh -u malt -p {{cassandra_password}} -e "CONSISTENCY ALL; ALTER USER cassandra WITH PASSWORD 'vedCucokvod7' NOSUPERUSER" {{config[ansible_hostname].cassandra_listen_address}}
      when: user_check|failed

    - name: Copy schema files
      copy: src=cassandra/templates/schema dest=/tmp

    - name: Copy schema settings files
      template: src=cassandra/templates/schema/settings.cql dest=/tmp/schema/settings.cql

    - name: Copy schema keyspace files
      template: src=cassandra/templates/schema/keyspace.cql dest=/tmp/schema/keyspace.cql

    - name: Initialize schema
      shell: >
        cqlsh -u malt -p {{cassandra_password}} -f /tmp/schema/keyspace.cql {{config[ansible_hostname].cassandra_listen_address}} &&
        cqlsh -u malt -p {{cassandra_password}} -f /tmp/schema/schema.cql -k malt  {{config[ansible_hostname].cassandra_listen_address}} &&
        cqlsh -u malt -p {{cassandra_password}} -f /tmp/schema/config.cql -k malt  {{config[ansible_hostname].cassandra_listen_address}} &&
        cqlsh -u malt -p {{cassandra_password}} -f /tmp/schema/settings.cql -k malt {{config[ansible_hostname].cassandra_listen_address}}
